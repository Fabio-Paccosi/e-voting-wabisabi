services:
  # Database PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: evoting-postgres
    environment:
      POSTGRES_DB: evoting_wabisabi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-SecurePass123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - evoting-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Redis per caching
  redis:
    image: redis:7-alpine
    container_name: evoting-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-RedisPass456!}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - evoting-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "RedisPass456!", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Auth Service (SERVER 2) -  MODIFICATO PER ACCESSO A SHARED/
  auth-service:
    build:
      context: .                    # ← CAMBIATO: build dalla root
      dockerfile: server2/Dockerfile # ← AGGIUNTO: specifica dockerfile
    container_name: evoting-auth-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-evoting_wabisabi}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-SecurePass123!}
      - JWT_SECRET=${JWT_SECRET:-default-secret-key}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-RedisPass456!}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - evoting-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # Vote Service (SERVER 3) -  MODIFICATO PER ACCESSO A SHARED/
  vote-service:
    build:
      context: .                    # ← CAMBIATO: build dalla root
      dockerfile: server3/Dockerfile # ← AGGIUNTO: specifica dockerfile
    container_name: evoting-vote-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-evoting_wabisabi}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-SecurePass123!}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-RedisPass456!}
      - BITCOIN_NETWORK=testnet
      - BITCOIN_RPC_HOST=bitcoin-node
      - BITCOIN_RPC_PORT=18332
      - BITCOIN_RPC_USER=bitcoinrpc
      - BITCOIN_RPC_PASSWORD=BitcoinSecurePass789!
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bitcoin-node:
        condition: service_started
    networks:
      - evoting-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3003/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # API Gateway (SERVER 1) -  MODIFICATO PER ACCESSO A SHARED/
  api-gateway:
    build:
      context: .                    # ← CAMBIATO: build dalla root
      dockerfile: server1/Dockerfile # ← AGGIUNTO: specifica dockerfile
    container_name: evoting-api-gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - AUTH_SERVICE_URL=http://auth-service:3002
      - VOTE_SERVICE_URL=http://vote-service:3003
      - JWT_SECRET=${JWT_SECRET:-default-secret-key}
      - DB_HOST=postgres
      - DB_NAME=${DB_NAME:-evoting_wabisabi}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-SecurePass123!}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-RedisPass456!}
    depends_on:
      auth-service:
        condition: service_started
      vote-service:
        condition: service_started
    networks:
      - evoting-network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # Bitcoin Node
  bitcoin-node:
    image: ruimarinho/bitcoin-core:0.21
    container_name: evoting-bitcoin-node
    command: >
      bitcoind
      -testnet=1
      -server=1
      -rpcbind=0.0.0.0
      -rpcallowip=0.0.0.0/0
      -rpcuser=${BITCOIN_RPC_USER:-bitcoinrpc}
      -rpcpassword=${BITCOIN_RPC_PASSWORD:-BitcoinSecurePass789!}
      -dbcache=512        
      -maxmempool=50      
      -prune=1000        
    volumes:
      - bitcoin_data:/home/bitcoin/.bitcoin
    ports:
      - "18332:18332"
      - "18333:18333"
    networks:
      - evoting-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  bitcoin_data:

networks:
  evoting-network:
    driver: bridge